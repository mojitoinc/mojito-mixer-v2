import _objectWithoutPropertiesLoose from '../../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js';
import _extends from '../../../@babel/runtime/helpers/esm/extends.js';
import * as React from 'react';
import PropTypes from 'prop-types';
import { clsx } from '../../../clsx/dist/clsx.m.js';
import '../../utils/esm/elementAcceptingRef.js';
import '../../utils/esm/elementTypeAcceptingRef.js';
import 'react-is';
import '../../utils/esm/ponyfillGlobal.js';
import '../../utils/esm/refType.js';
import '../../utils/esm/integerPropType.js';
import composeClasses from '../../utils/esm/composeClasses/composeClasses.js';
import '../../base/BadgeUnstyled/BadgeUnstyled.js';
import '../../base/BadgeUnstyled/badgeUnstyledClasses.js';
import '../../base/ButtonUnstyled/ButtonUnstyled.js';
import '../../base/ButtonUnstyled/buttonUnstyledClasses.js';
import '../../base/ClickAwayListener/ClickAwayListener.js';
import '../../base/FocusTrap/FocusTrap.js';
import '../../base/FormControlUnstyled/FormControlUnstyled.js';
import '../../base/FormControlUnstyled/FormControlUnstyledContext.js';
import '../../base/FormControlUnstyled/formControlUnstyledClasses.js';
import '../../base/InputUnstyled/InputUnstyled.js';
import '../../base/InputUnstyled/inputUnstyledClasses.js';
import '../../base/ListboxUnstyled/useListbox.types.js';
import '../../base/MenuUnstyled/MenuUnstyled.js';
import '../../base/MenuUnstyled/MenuUnstyledContext.js';
import '../../base/MenuUnstyled/menuUnstyledClasses.js';
import '../../base/MenuItemUnstyled/MenuItemUnstyled.js';
import '../../base/MenuItemUnstyled/menuItemUnstyledClasses.js';
import '../../base/ModalUnstyled/ModalUnstyled.js';
import '../../base/ModalUnstyled/modalUnstyledClasses.js';
import '../../base/MultiSelectUnstyled/MultiSelectUnstyled.js';
import '../../base/NoSsr/NoSsr.js';
import '../../base/OptionGroupUnstyled/OptionGroupUnstyled.js';
import '../../base/OptionGroupUnstyled/optionGroupUnstyledClasses.js';
import '../../base/OptionUnstyled/OptionUnstyled.js';
import '../../base/OptionUnstyled/optionUnstyledClasses.js';
import '../../base/PopperUnstyled/PopperUnstyled.js';
import '../../base/PopperUnstyled/popperUnstyledClasses.js';
import '../../base/Portal/Portal.js';
import '../../base/SelectUnstyled/SelectUnstyled.js';
import '../../base/SelectUnstyled/selectUnstyledClasses.js';
import '../../base/SliderUnstyled/SliderUnstyled.js';
import '../../base/SliderUnstyled/SliderValueLabelUnstyled.js';
import '../../base/SliderUnstyled/sliderUnstyledClasses.js';
import '../../base/SnackbarUnstyled/SnackbarUnstyled.js';
import '../../base/SnackbarUnstyled/snackbarUnstyledClasses.js';
import '../../base/SwitchUnstyled/SwitchUnstyled.js';
import '../../base/SwitchUnstyled/switchUnstyledClasses.js';
import '../../base/TablePaginationUnstyled/TablePaginationUnstyled.js';
import { jsx } from 'react/jsx-runtime';
import '../../base/TablePaginationUnstyled/tablePaginationUnstyledClasses.js';
import '../../base/TabPanelUnstyled/TabPanelUnstyled.js';
import '../../base/TabPanelUnstyled/tabPanelUnstyledClasses.js';
import '../../base/TabsUnstyled/TabsUnstyled.js';
import '../../base/TabsUnstyled/TabsContext.js';
import '../../base/TabsUnstyled/tabsUnstyledClasses.js';
import '../../base/TabsListUnstyled/TabsListUnstyled.js';
import '../../base/TabsListUnstyled/tabsListUnstyledClasses.js';
import '../../base/TabUnstyled/TabUnstyled.js';
import '../../base/TabUnstyled/tabUnstyledClasses.js';
import '../../base/TextareaAutosize/TextareaAutosize.js';
import ListContext from '../List/ListContext.js';
import styled from '../styles/styled.js';
import useThemeProps from '../styles/useThemeProps.js';
import { getListItemAvatarUtilityClass } from './listItemAvatarClasses.js';

const _excluded = ["className"];
const useUtilityClasses = ownerState => {
  const {
    alignItems,
    classes
  } = ownerState;
  const slots = {
    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']
  };
  return composeClasses(slots, getListItemAvatarUtilityClass, classes);
};
const ListItemAvatarRoot = styled('div', {
  name: 'MuiListItemAvatar',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];
  }
})(({
  ownerState
}) => _extends({
  minWidth: 56,
  flexShrink: 0
}, ownerState.alignItems === 'flex-start' && {
  marginTop: 8
}));

/**
 * A simple wrapper to apply `List` styles to an `Avatar`.
 */
const ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: 'MuiListItemAvatar'
  });
  const {
      className
    } = props,
    other = _objectWithoutPropertiesLoose(props, _excluded);
  const context = React.useContext(ListContext);
  const ownerState = _extends({}, props, {
    alignItems: context.alignItems
  });
  const classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/jsx(ListItemAvatarRoot, _extends({
    className: clsx(classes.root, className),
    ownerState: ownerState,
    ref: ref
  }, other));
});
process.env.NODE_ENV !== "production" ? ListItemAvatar.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `Avatar`.
   */
  children: PropTypes.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: PropTypes.object,
  /**
   * @ignore
   */
  className: PropTypes.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])
} : void 0;

export { ListItemAvatar as default };
//# sourceMappingURL=ListItemAvatar.js.map
