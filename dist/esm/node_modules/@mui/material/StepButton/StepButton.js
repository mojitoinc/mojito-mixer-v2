import _objectWithoutPropertiesLoose from '../../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js';
import _extends from '../../../@babel/runtime/helpers/esm/extends.js';
import * as React from 'react';
import PropTypes from 'prop-types';
import { clsx } from '../../../clsx/dist/clsx.m.js';
import '../../utils/esm/elementAcceptingRef.js';
import '../../utils/esm/elementTypeAcceptingRef.js';
import 'react-is';
import '../../utils/esm/ponyfillGlobal.js';
import '../../utils/esm/refType.js';
import isMuiElement from '../../utils/esm/isMuiElement.js';
import '../../utils/esm/integerPropType.js';
import composeClasses from '../../utils/esm/composeClasses/composeClasses.js';
import '../../base/BadgeUnstyled/BadgeUnstyled.js';
import '../../base/BadgeUnstyled/badgeUnstyledClasses.js';
import '../../base/ButtonUnstyled/ButtonUnstyled.js';
import '../../base/ButtonUnstyled/buttonUnstyledClasses.js';
import '../../base/ClickAwayListener/ClickAwayListener.js';
import '../../base/FocusTrap/FocusTrap.js';
import '../../base/FormControlUnstyled/FormControlUnstyled.js';
import '../../base/FormControlUnstyled/FormControlUnstyledContext.js';
import '../../base/FormControlUnstyled/formControlUnstyledClasses.js';
import '../../base/InputUnstyled/InputUnstyled.js';
import '../../base/InputUnstyled/inputUnstyledClasses.js';
import '../../base/ListboxUnstyled/useListbox.types.js';
import '../../base/MenuUnstyled/MenuUnstyled.js';
import '../../base/MenuUnstyled/MenuUnstyledContext.js';
import '../../base/MenuUnstyled/menuUnstyledClasses.js';
import '../../base/MenuItemUnstyled/MenuItemUnstyled.js';
import '../../base/MenuItemUnstyled/menuItemUnstyledClasses.js';
import '../../base/ModalUnstyled/ModalUnstyled.js';
import '../../base/ModalUnstyled/modalUnstyledClasses.js';
import '../../base/MultiSelectUnstyled/MultiSelectUnstyled.js';
import '../../base/NoSsr/NoSsr.js';
import '../../base/OptionGroupUnstyled/OptionGroupUnstyled.js';
import '../../base/OptionGroupUnstyled/optionGroupUnstyledClasses.js';
import '../../base/OptionUnstyled/OptionUnstyled.js';
import '../../base/OptionUnstyled/optionUnstyledClasses.js';
import '../../base/PopperUnstyled/PopperUnstyled.js';
import '../../base/PopperUnstyled/popperUnstyledClasses.js';
import '../../base/Portal/Portal.js';
import '../../base/SelectUnstyled/SelectUnstyled.js';
import '../../base/SelectUnstyled/selectUnstyledClasses.js';
import '../../base/SliderUnstyled/SliderUnstyled.js';
import '../../base/SliderUnstyled/sliderUnstyledClasses.js';
import '../../base/SnackbarUnstyled/SnackbarUnstyled.js';
import '../../base/SnackbarUnstyled/snackbarUnstyledClasses.js';
import '../../base/SwitchUnstyled/SwitchUnstyled.js';
import '../../base/SwitchUnstyled/switchUnstyledClasses.js';
import '../../base/TablePaginationUnstyled/TablePaginationUnstyled.js';
import { jsx } from 'react/jsx-runtime';
import '../../base/TablePaginationUnstyled/tablePaginationUnstyledClasses.js';
import '../../base/TabPanelUnstyled/TabPanelUnstyled.js';
import '../../base/TabPanelUnstyled/tabPanelUnstyledClasses.js';
import '../../base/TabsUnstyled/TabsUnstyled.js';
import '../../base/TabsUnstyled/TabsContext.js';
import '../../base/TabsUnstyled/tabsUnstyledClasses.js';
import '../../base/TabsListUnstyled/TabsListUnstyled.js';
import '../../base/TabsListUnstyled/tabsListUnstyledClasses.js';
import '../../base/TabUnstyled/TabUnstyled.js';
import '../../base/TabUnstyled/tabUnstyledClasses.js';
import '../../base/TextareaAutosize/TextareaAutosize.js';
import styled from '../styles/styled.js';
import useThemeProps from '../styles/useThemeProps.js';
import ButtonBase from '../ButtonBase/ButtonBase.js';
import '../ButtonBase/buttonBaseClasses.js';
import '../ButtonBase/touchRippleClasses.js';
import StepLabel from '../StepLabel/StepLabel.js';
import '../StepLabel/stepLabelClasses.js';
import StepperContext from '../Stepper/StepperContext.js';
import StepContext from '../Step/StepContext.js';
import stepButtonClasses, { getStepButtonUtilityClass } from './stepButtonClasses.js';

const _excluded = ["children", "className", "icon", "optional"];
const useUtilityClasses = ownerState => {
  const {
    classes,
    orientation
  } = ownerState;
  const slots = {
    root: ['root', orientation],
    touchRipple: ['touchRipple']
  };
  return composeClasses(slots, getStepButtonUtilityClass, classes);
};
const StepButtonRoot = styled(ButtonBase, {
  name: 'MuiStepButton',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${stepButtonClasses.touchRipple}`]: styles.touchRipple
    }, styles.root, styles[ownerState.orientation]];
  }
})(({
  ownerState
}) => _extends({
  width: '100%',
  padding: '24px 16px',
  margin: '-24px -16px',
  boxSizing: 'content-box'
}, ownerState.orientation === 'vertical' && {
  justifyContent: 'flex-start',
  padding: '8px',
  margin: '-8px'
}, {
  [`& .${stepButtonClasses.touchRipple}`]: {
    color: 'rgba(0, 0, 0, 0.3)'
  }
}));
const StepButton = /*#__PURE__*/React.forwardRef(function StepButton(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: 'MuiStepButton'
  });
  const {
      children,
      className,
      icon,
      optional
    } = props,
    other = _objectWithoutPropertiesLoose(props, _excluded);
  const {
    disabled
  } = React.useContext(StepContext);
  const {
    orientation
  } = React.useContext(StepperContext);
  const ownerState = _extends({}, props, {
    orientation
  });
  const classes = useUtilityClasses(ownerState);
  const childProps = {
    icon,
    optional
  };
  const child = isMuiElement(children, ['StepLabel']) ? /*#__PURE__*/React.cloneElement(children, childProps) : /*#__PURE__*/jsx(StepLabel, _extends({}, childProps, {
    children: children
  }));
  return /*#__PURE__*/jsx(StepButtonRoot, _extends({
    focusRipple: true,
    disabled: disabled,
    TouchRippleProps: {
      className: classes.touchRipple
    },
    className: clsx(classes.root, className),
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: child
  }));
});
process.env.NODE_ENV !== "production" ? StepButton.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */
  children: PropTypes.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: PropTypes.object,
  /**
   * @ignore
   */
  className: PropTypes.string,
  /**
   * The icon displayed by the step label.
   */
  icon: PropTypes.node,
  /**
   * The optional node to display.
   */
  optional: PropTypes.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])
} : void 0;

export { StepButton as default };
//# sourceMappingURL=StepButton.js.map
