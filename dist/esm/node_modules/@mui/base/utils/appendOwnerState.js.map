{"version":3,"file":"appendOwnerState.js","sources":["../../../../../../node_modules/@mui/base/utils/appendOwnerState.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from './isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nexport default function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}"],"names":[],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,gBAAgB,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE;AAC9E,EAAE,IAAI,WAAW,KAAK,SAAS,IAAI,eAAe,CAAC,WAAW,CAAC,EAAE;AACjE,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG;AACH,EAAE,OAAO,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE;AAClC,IAAI,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC;AAC/D,GAAG,CAAC,CAAC;AACL;;;;"}