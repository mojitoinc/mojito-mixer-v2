import '../TabsUnstyled/TabsUnstyled.js';
import { useTabContext, getPanelId, getTabId } from '../TabsUnstyled/TabsContext.js';
import '../TabsUnstyled/tabsUnstyledClasses.js';
import 'react';
import '../../utils/esm/elementAcceptingRef.js';
import '../../utils/esm/elementTypeAcceptingRef.js';
import 'react-is';
import '../../utils/esm/ponyfillGlobal.js';
import '../../utils/esm/refType.js';
import '../../utils/esm/integerPropType.js';

/**
 *
 * Demos:
 *
 * - [Unstyled Tabs](https://mui.com/base/react-tabs/#hooks)
 *
 * API:
 *
 * - [useTabPanel API](https://mui.com/base/api/use-tab-panel/)
 */
function useTabPanel(parameters) {
  const {
    value
  } = parameters;
  const context = useTabContext();
  if (context === null) {
    throw new Error('No TabContext provided');
  }
  const hidden = value !== context.value;
  const id = getPanelId(context, value);
  const tabId = getTabId(context, value);
  const getRootProps = () => {
    return {
      'aria-labelledby': tabId != null ? tabId : undefined,
      hidden,
      id: id != null ? id : undefined
    };
  };
  return {
    hidden,
    getRootProps
  };
}

export { useTabPanel as default };
//# sourceMappingURL=useTabPanel.js.map
