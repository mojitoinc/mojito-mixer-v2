import { concat } from '../../bytes/lib.esm/index.js';
import { keccak256 } from '../../keccak256/lib.esm/index.js';
import '../../bignumber/lib.esm/bignumber.js';
import '../../bignumber/lib.esm/fixednumber.js';
import { toUtf8Bytes } from '../../strings/lib.esm/utf8.js';
import '../../strings/lib.esm/idna.js';

const messagePrefix = "\x19Ethereum Signed Message:\n";
function hashMessage(message) {
    if (typeof (message) === "string") {
        message = toUtf8Bytes(message);
    }
    return keccak256(concat([
        toUtf8Bytes(messagePrefix),
        toUtf8Bytes(String(message.length)),
        message
    ]));
}

export { hashMessage, messagePrefix };
//# sourceMappingURL=message.js.map
