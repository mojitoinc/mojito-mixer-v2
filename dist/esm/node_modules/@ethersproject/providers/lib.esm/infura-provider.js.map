{"version":3,"file":"infura-provider.js","sources":["../../../../../../node_modules/@ethersproject/providers/lib.esm/infura-provider.js"],"sourcesContent":["\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map"],"names":[],"mappings":"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"}