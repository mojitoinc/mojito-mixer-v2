import hash from 'hash.js';
import { arrayify } from '../../bytes/lib.esm/index.js';
import { SupportedAlgorithm } from './types.js';
import { Logger } from '../../logger/lib.esm/index.js';
import { version } from './_version.js';

const logger = new Logger(version);
function ripemd160(data) {
    return "0x" + (hash.ripemd160().update(arrayify(data)).digest("hex"));
}
function sha256(data) {
    return "0x" + (hash.sha256().update(arrayify(data)).digest("hex"));
}
function sha512(data) {
    return "0x" + (hash.sha512().update(arrayify(data)).digest("hex"));
}
function computeHmac(algorithm, key, data) {
    if (!SupportedAlgorithm[algorithm]) {
        logger.throwError("unsupported algorithm " + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "hmac",
            algorithm: algorithm
        });
    }
    return "0x" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest("hex");
}

export { computeHmac, ripemd160, sha256, sha512 };
//# sourceMappingURL=sha2.js.map
