import '../utilities/globals/index.js';
export { ApolloClient } from './ApolloClient.js';
export { ObservableQuery } from './ObservableQuery.js';
export { NetworkStatus } from './networkStatus.js';
export { ApolloError, isApolloError } from '../errors/index.js';
export { ApolloCache } from '../cache/core/cache.js';
export { MissingFieldError } from '../cache/core/types/common.js';
export { isReference, makeReference } from '../utilities/graphql/storeUtils.js';
import '../utilities/graphql/transform.js';
import '../utilities/common/mergeDeep.js';
import '../utilities/observables/Observable.js';
import '../utilities/observables/Concast.js';
import '../utilities/common/canUse.js';
import '../cache/inmemory/entityStore.js';
export { InMemoryCache } from '../cache/inmemory/inMemoryCache.js';
export { makeVar } from '../cache/inmemory/reactiveVars.js';
import '../cache/inmemory/policies.js';
import '../cache/inmemory/object-canon.js';
import '../../../optimism/lib/bundle.esm.js';
import '../link/core/empty.js';
import '../link/core/from.js';
import '../link/core/split.js';
import '../link/core/concat.js';
export { execute } from '../link/core/execute.js';
export { ApolloLink } from '../link/core/ApolloLink.js';
export { createHttpLink } from '../link/http/createHttpLink.js';
export { HttpLink } from '../link/http/HttpLink.js';
import { setVerbosity } from '../../../ts-invariant/lib/invariant.js';
export { setVerbosity as setLogVerbosity } from '../../../ts-invariant/lib/invariant.js';
export { disableExperimentalFragmentVariables, disableFragmentWarnings, enableExperimentalFragmentVariables, gql, resetCaches } from '../../../graphql-tag/lib/index.js';
import DEV from '../utilities/globals/DEV.js';

setVerbosity(DEV ? "log" : "silent");
//# sourceMappingURL=index.js.map
