import '../../../utilities/globals/index.js';
import '../../../utilities/graphql/storeUtils.js';
import '../../../utilities/graphql/transform.js';
import '../../../utilities/common/mergeDeep.js';
import '../../../utilities/observables/Observable.js';
import '../../../utilities/observables/Concast.js';
import { canUseAsyncIteratorSymbol } from '../../../utilities/common/canUse.js';

function readerIterator(reader) {
    var iterator = {
        next: function () {
            return reader.read();
        },
    };
    if (canUseAsyncIteratorSymbol) {
        iterator[Symbol.asyncIterator] = function () {
            return this;
        };
    }
    return iterator;
}

export { readerIterator as default };
//# sourceMappingURL=reader.js.map
