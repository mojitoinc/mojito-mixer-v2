{"version":3,"file":"SnackbarUnstyled.js","sources":["../../../../../../node_modules/@mui/base/SnackbarUnstyled/SnackbarUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoHideDuration\", \"children\", \"component\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ClickAwayListener from '../ClickAwayListener';\nimport composeClasses from '../composeClasses';\nimport { getSnackbarUnstyledUtilityClass } from './snackbarUnstyledClasses';\nimport useSnackbar from './useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getSnackbarUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled Snackbar](https://mui.com/base/react-snackbar/)\n *\n * API:\n *\n * - [SnackbarUnstyled API](https://mui.com/base/api/snackbar-unstyled/)\n */\nconst SnackbarUnstyled = /*#__PURE__*/React.forwardRef(function SnackbarUnstyled(props, ref) {\n  const {\n      autoHideDuration = null,\n      children,\n      component,\n      disableWindowBlurListener = false,\n      exited = true,\n      onClose,\n      open,\n      resumeHideDuration,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses();\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, props, {\n    autoHideDuration,\n    disableWindowBlurListener,\n    onClose,\n    open,\n    resumeHideDuration,\n    ref\n  }));\n  const ownerState = props;\n  const Root = component || slots.root || 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: slotProps.clickAwayListener,\n    additionalProps: {\n      onClickAway\n    },\n    ownerState\n  });\n\n  // ClickAwayListener doesn't support ownerState\n  delete clickAwayListenerProps.ownerState;\n\n  // So that we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * The prop used to handle exited transition and unmount the component.\n   * @default true\n   */\n  exited: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The props used for each slot inside the Snackbar.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Snackbar.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default SnackbarUnstyled;"],"names":["composeClasses","getSnackbarUnstyledUtilityClass","React","_objectWithoutPropertiesLoose","useSnackbar","_extends","useSlotProps","ClickAwayListener","_jsx","PropTypes"],"mappings":"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"}