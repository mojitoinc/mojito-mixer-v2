'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('../../../@babel/runtime/helpers/esm/extends.js');
var objectWithoutPropertiesLoose = require('../../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js');
var React = require('react');
var clsx_m = require('../../../clsx/dist/clsx.m.js');
var PropTypes = require('prop-types');
require('../../utils/esm/elementAcceptingRef.js');
require('../../utils/esm/elementTypeAcceptingRef.js');
require('react-is');
require('../../utils/esm/ponyfillGlobal.js');
require('../../utils/esm/refType.js');
require('../../utils/esm/integerPropType.js');
var composeClasses = require('../../utils/esm/composeClasses/composeClasses.js');
require('../../base/BadgeUnstyled/BadgeUnstyled.js');
require('../../base/BadgeUnstyled/badgeUnstyledClasses.js');
require('../../base/ButtonUnstyled/ButtonUnstyled.js');
require('../../base/ButtonUnstyled/buttonUnstyledClasses.js');
require('../../base/ClickAwayListener/ClickAwayListener.js');
require('../../base/FocusTrap/FocusTrap.js');
require('../../base/FormControlUnstyled/FormControlUnstyled.js');
require('../../base/FormControlUnstyled/FormControlUnstyledContext.js');
require('../../base/FormControlUnstyled/formControlUnstyledClasses.js');
require('../../base/InputUnstyled/InputUnstyled.js');
require('../../base/InputUnstyled/inputUnstyledClasses.js');
require('../../base/ListboxUnstyled/useListbox.types.js');
require('../../base/MenuUnstyled/MenuUnstyled.js');
require('../../base/MenuUnstyled/MenuUnstyledContext.js');
require('../../base/MenuUnstyled/menuUnstyledClasses.js');
require('../../base/MenuItemUnstyled/MenuItemUnstyled.js');
require('../../base/MenuItemUnstyled/menuItemUnstyledClasses.js');
require('../../base/ModalUnstyled/ModalUnstyled.js');
require('../../base/ModalUnstyled/modalUnstyledClasses.js');
require('../../base/MultiSelectUnstyled/MultiSelectUnstyled.js');
require('../../base/NoSsr/NoSsr.js');
require('../../base/OptionGroupUnstyled/OptionGroupUnstyled.js');
require('../../base/OptionGroupUnstyled/optionGroupUnstyledClasses.js');
require('../../base/OptionUnstyled/OptionUnstyled.js');
require('../../base/OptionUnstyled/optionUnstyledClasses.js');
require('../../base/PopperUnstyled/PopperUnstyled.js');
require('../../base/PopperUnstyled/popperUnstyledClasses.js');
require('../../base/Portal/Portal.js');
require('../../base/SelectUnstyled/SelectUnstyled.js');
require('../../base/SelectUnstyled/selectUnstyledClasses.js');
require('../../base/SliderUnstyled/SliderUnstyled.js');
require('../../base/SliderUnstyled/SliderValueLabelUnstyled.js');
require('../../base/SliderUnstyled/sliderUnstyledClasses.js');
require('../../base/SnackbarUnstyled/SnackbarUnstyled.js');
require('../../base/SnackbarUnstyled/snackbarUnstyledClasses.js');
require('../../base/SwitchUnstyled/SwitchUnstyled.js');
require('../../base/SwitchUnstyled/switchUnstyledClasses.js');
require('../../base/TablePaginationUnstyled/TablePaginationUnstyled.js');
var jsxRuntime = require('react/jsx-runtime');
require('../../base/TablePaginationUnstyled/tablePaginationUnstyledClasses.js');
require('../../base/TabPanelUnstyled/TabPanelUnstyled.js');
require('../../base/TabPanelUnstyled/tabPanelUnstyledClasses.js');
require('../../base/TabsUnstyled/TabsUnstyled.js');
require('../../base/TabsUnstyled/TabsContext.js');
require('../../base/TabsUnstyled/tabsUnstyledClasses.js');
require('../../base/TabsListUnstyled/TabsListUnstyled.js');
require('../../base/TabsListUnstyled/tabsListUnstyledClasses.js');
require('../../base/TabUnstyled/TabUnstyled.js');
require('../../base/TabUnstyled/tabUnstyledClasses.js');
require('../../base/TextareaAutosize/TextareaAutosize.js');
var NativeSelectInput = require('./NativeSelectInput.js');
var formControlState = require('../FormControl/formControlState.js');
var useFormControl = require('../FormControl/useFormControl.js');
var ArrowDropDown = require('../internal/svg-icons/ArrowDropDown.js');
var Input = require('../Input/Input.js');
require('../Input/inputClasses.js');
var useThemeProps = require('../styles/useThemeProps.js');
var nativeSelectClasses = require('./nativeSelectClasses.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

const _excluded = ["className", "children", "classes", "IconComponent", "input", "inputProps", "variant"],
  _excluded2 = ["root"];
const useUtilityClasses = ownerState => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ['root']
  };
  return composeClasses["default"](slots, nativeSelectClasses.getNativeSelectUtilityClasses, classes);
};
const defaultInput = /*#__PURE__*/jsxRuntime.jsx(Input["default"], {});
/**
 * An alternative to `<Select native />` with a much smaller bundle size footprint.
 */
const NativeSelect = /*#__PURE__*/React__namespace.forwardRef(function NativeSelect(inProps, ref) {
  const props = useThemeProps["default"]({
    name: 'MuiNativeSelect',
    props: inProps
  });
  const {
      className,
      children,
      classes: classesProp = {},
      IconComponent = ArrowDropDown["default"],
      input = defaultInput,
      inputProps
    } = props,
    other = objectWithoutPropertiesLoose["default"](props, _excluded);
  const muiFormControl = useFormControl["default"]();
  const fcs = formControlState["default"]({
    props,
    muiFormControl,
    states: ['variant']
  });
  const ownerState = _extends["default"]({}, props, {
    classes: classesProp
  });
  const classes = useUtilityClasses(ownerState);
  const otherClasses = objectWithoutPropertiesLoose["default"](classesProp, _excluded2);
  return /*#__PURE__*/jsxRuntime.jsx(React__namespace.Fragment, {
    children: /*#__PURE__*/React__namespace.cloneElement(input, _extends["default"]({
      // Most of the logic is implemented in `NativeSelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: NativeSelectInput["default"],
      inputProps: _extends["default"]({
        children,
        classes: otherClasses,
        IconComponent,
        variant: fcs.variant,
        type: undefined
      }, inputProps, input ? input.props.inputProps : {}),
      ref
    }, other, {
      className: clsx_m.clsx(classes.root, input.props.className, className)
    }))
  });
});
process.env.NODE_ENV !== "production" ? NativeSelect.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: PropTypes__default["default"].node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: PropTypes__default["default"].object,
  /**
   * @ignore
   */
  className: PropTypes__default["default"].string,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: PropTypes__default["default"].elementType,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   * @default <Input />
   */
  input: PropTypes__default["default"].element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
   */
  inputProps: PropTypes__default["default"].object,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: PropTypes__default["default"].func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes__default["default"].oneOfType([PropTypes__default["default"].arrayOf(PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].object, PropTypes__default["default"].bool])), PropTypes__default["default"].func, PropTypes__default["default"].object]),
  /**
   * The `input` value. The DOM API casts this to a string.
   */
  value: PropTypes__default["default"].any,
  /**
   * The variant to use.
   */
  variant: PropTypes__default["default"].oneOf(['filled', 'outlined', 'standard'])
} : void 0;
NativeSelect.muiName = 'Select';

exports["default"] = NativeSelect;
//# sourceMappingURL=NativeSelect.js.map
