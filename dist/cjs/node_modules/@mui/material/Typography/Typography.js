'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var objectWithoutPropertiesLoose = require('../../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js');
var _extends = require('../../../@babel/runtime/helpers/esm/extends.js');
var React = require('react');
var PropTypes = require('prop-types');
var clsx_m = require('../../../clsx/dist/clsx.m.js');
require('../../utils/esm/elementAcceptingRef.js');
require('../../utils/esm/elementTypeAcceptingRef.js');
require('react-is');
require('../../utils/esm/ponyfillGlobal.js');
require('../../utils/esm/refType.js');
var capitalize = require('../../utils/esm/capitalize.js');
require('../../utils/esm/integerPropType.js');
var composeClasses = require('../../utils/esm/composeClasses/composeClasses.js');
require('@emotion/styled');
require('@emotion/react');
require('../../styled-engine/StyledEngineProvider/StyledEngineProvider.js');
require('../../styled-engine/GlobalStyles/GlobalStyles.js');
require('../../system/esm/borders.js');
require('../../system/esm/display.js');
require('../../system/esm/flexbox.js');
require('../../system/esm/cssGrid.js');
require('../../system/esm/palette.js');
require('../../system/esm/positions.js');
require('../../system/esm/shadows.js');
require('../../system/esm/sizing.js');
require('../../system/esm/spacing.js');
require('../../system/esm/responsivePropType.js');
require('../../system/esm/typography.js');
require('../../system/esm/styleFunctionSx/styleFunctionSx.js');
var extendSxProp = require('../../system/esm/styleFunctionSx/extendSxProp.js');
require('../../system/esm/getThemeValue.js');
require('../../system/esm/Box/Box.js');
require('../../system/esm/useTheme.js');
var jsxRuntime = require('react/jsx-runtime');
require('../../system/esm/createStyled.js');
require('../../system/esm/styled.js');
require('../../private-theming/ThemeProvider/ThemeProvider.js');
require('../../private-theming/useTheme/ThemeContext.js');
require('../../system/esm/ThemeProvider/ThemeProvider.js');
require('../../system/esm/Container/createContainer.js');
require('../../system/esm/Container/Container.js');
require('../../system/esm/Container/containerClasses.js');
require('../../system/esm/Unstable_Grid/Grid.js');
require('../../system/esm/Unstable_Grid/createGrid.js');
require('../../system/esm/Unstable_Grid/gridClasses.js');
require('../../system/esm/Stack/Stack.js');
require('../../system/esm/Stack/createStack.js');
require('../../system/esm/Stack/stackClasses.js');
require('../../base/BadgeUnstyled/BadgeUnstyled.js');
require('../../base/BadgeUnstyled/badgeUnstyledClasses.js');
require('../../base/ButtonUnstyled/ButtonUnstyled.js');
require('../../base/ButtonUnstyled/buttonUnstyledClasses.js');
require('../../base/ClickAwayListener/ClickAwayListener.js');
require('../../base/FocusTrap/FocusTrap.js');
require('../../base/FormControlUnstyled/FormControlUnstyled.js');
require('../../base/FormControlUnstyled/FormControlUnstyledContext.js');
require('../../base/FormControlUnstyled/formControlUnstyledClasses.js');
require('../../base/InputUnstyled/InputUnstyled.js');
require('../../base/InputUnstyled/inputUnstyledClasses.js');
require('../../base/ListboxUnstyled/useListbox.types.js');
require('../../base/MenuUnstyled/MenuUnstyled.js');
require('../../base/MenuUnstyled/MenuUnstyledContext.js');
require('../../base/MenuUnstyled/menuUnstyledClasses.js');
require('../../base/MenuItemUnstyled/MenuItemUnstyled.js');
require('../../base/MenuItemUnstyled/menuItemUnstyledClasses.js');
require('../../base/ModalUnstyled/ModalUnstyled.js');
require('../../base/ModalUnstyled/modalUnstyledClasses.js');
require('../../base/MultiSelectUnstyled/MultiSelectUnstyled.js');
require('../../base/NoSsr/NoSsr.js');
require('../../base/OptionGroupUnstyled/OptionGroupUnstyled.js');
require('../../base/OptionGroupUnstyled/optionGroupUnstyledClasses.js');
require('../../base/OptionUnstyled/OptionUnstyled.js');
require('../../base/OptionUnstyled/optionUnstyledClasses.js');
require('../../base/PopperUnstyled/PopperUnstyled.js');
require('../../base/PopperUnstyled/popperUnstyledClasses.js');
require('../../base/Portal/Portal.js');
require('../../base/SelectUnstyled/SelectUnstyled.js');
require('../../base/SelectUnstyled/selectUnstyledClasses.js');
require('../../base/SliderUnstyled/SliderUnstyled.js');
require('../../base/SliderUnstyled/sliderUnstyledClasses.js');
require('../../base/SnackbarUnstyled/SnackbarUnstyled.js');
require('../../base/SnackbarUnstyled/snackbarUnstyledClasses.js');
require('../../base/SwitchUnstyled/SwitchUnstyled.js');
require('../../base/SwitchUnstyled/switchUnstyledClasses.js');
require('../../base/TablePaginationUnstyled/TablePaginationUnstyled.js');
require('../../base/TablePaginationUnstyled/tablePaginationUnstyledClasses.js');
require('../../base/TabPanelUnstyled/TabPanelUnstyled.js');
require('../../base/TabPanelUnstyled/tabPanelUnstyledClasses.js');
require('../../base/TabsUnstyled/TabsUnstyled.js');
require('../../base/TabsUnstyled/TabsContext.js');
require('../../base/TabsUnstyled/tabsUnstyledClasses.js');
require('../../base/TabsListUnstyled/TabsListUnstyled.js');
require('../../base/TabsListUnstyled/tabsListUnstyledClasses.js');
require('../../base/TabUnstyled/TabUnstyled.js');
require('../../base/TabUnstyled/tabUnstyledClasses.js');
require('../../base/TextareaAutosize/TextareaAutosize.js');
var styled = require('../styles/styled.js');
var useThemeProps = require('../styles/useThemeProps.js');
var typographyClasses = require('./typographyClasses.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

const _excluded = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"];
const useUtilityClasses = ownerState => {
  const {
    align,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    classes
  } = ownerState;
  const slots = {
    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize["default"](align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']
  };
  return composeClasses["default"](slots, typographyClasses.getTypographyUtilityClass, classes);
};
const TypographyRoot = styled["default"]('span', {
  name: 'MuiTypography',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize["default"](ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];
  }
})(({
  theme,
  ownerState
}) => _extends["default"]({
  margin: 0
}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {
  textAlign: ownerState.align
}, ownerState.noWrap && {
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
}, ownerState.gutterBottom && {
  marginBottom: '0.35em'
}, ownerState.paragraph && {
  marginBottom: 16
}));
const defaultVariantMapping = {
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  subtitle1: 'h6',
  subtitle2: 'h6',
  body1: 'p',
  body2: 'p',
  inherit: 'p'
};

// TODO v6: deprecate these color values in v5.x and remove the transformation in v6
const colorTransformations = {
  primary: 'primary.main',
  textPrimary: 'text.primary',
  secondary: 'secondary.main',
  textSecondary: 'text.secondary',
  error: 'error.main'
};
const transformDeprecatedColors = color => {
  return colorTransformations[color] || color;
};
const Typography = /*#__PURE__*/React__namespace.forwardRef(function Typography(inProps, ref) {
  const themeProps = useThemeProps["default"]({
    props: inProps,
    name: 'MuiTypography'
  });
  const color = transformDeprecatedColors(themeProps.color);
  const props = extendSxProp["default"](_extends["default"]({}, themeProps, {
    color
  }));
  const {
      align = 'inherit',
      className,
      component,
      gutterBottom = false,
      noWrap = false,
      paragraph = false,
      variant = 'body1',
      variantMapping = defaultVariantMapping
    } = props,
    other = objectWithoutPropertiesLoose["default"](props, _excluded);
  const ownerState = _extends["default"]({}, props, {
    align,
    color,
    className,
    component,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    variantMapping
  });
  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';
  const classes = useUtilityClasses(ownerState);
  return /*#__PURE__*/jsxRuntime.jsx(TypographyRoot, _extends["default"]({
    as: Component,
    ref: ref,
    ownerState: ownerState,
    className: clsx_m.clsx(classes.root, className)
  }, other));
});
process.env.NODE_ENV !== "production" ? Typography.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: PropTypes__default["default"].oneOf(['center', 'inherit', 'justify', 'left', 'right']),
  /**
   * The content of the component.
   */
  children: PropTypes__default["default"].node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: PropTypes__default["default"].object,
  /**
   * @ignore
   */
  className: PropTypes__default["default"].string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: PropTypes__default["default"].elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: PropTypes__default["default"].bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: PropTypes__default["default"].bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   */
  paragraph: PropTypes__default["default"].bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes__default["default"].oneOfType([PropTypes__default["default"].arrayOf(PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].object, PropTypes__default["default"].bool])), PropTypes__default["default"].func, PropTypes__default["default"].object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: PropTypes__default["default"] /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes__default["default"].oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes__default["default"].string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: PropTypes__default["default"] /* @typescript-to-proptypes-ignore */.object
} : void 0;

exports.TypographyRoot = TypographyRoot;
exports["default"] = Typography;
//# sourceMappingURL=Typography.js.map
