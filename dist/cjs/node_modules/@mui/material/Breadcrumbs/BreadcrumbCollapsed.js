'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('../../../@babel/runtime/helpers/esm/extends.js');
require('react');
var PropTypes = require('prop-types');
require('../../utils/esm/elementAcceptingRef.js');
require('../../utils/esm/elementTypeAcceptingRef.js');
require('react-is');
require('../../utils/esm/ponyfillGlobal.js');
require('../../utils/esm/refType.js');
require('../../utils/esm/integerPropType.js');
require('@emotion/styled');
require('../../../@emotion/react/dist/emotion-react.esm.js');
require('../../styled-engine/StyledEngineProvider/StyledEngineProvider.js');
require('../../styled-engine/GlobalStyles/GlobalStyles.js');
require('../../system/esm/borders.js');
require('../../system/esm/display.js');
require('../../system/esm/flexbox.js');
require('../../system/esm/cssGrid.js');
require('../../system/esm/palette.js');
require('../../system/esm/positions.js');
require('../../system/esm/shadows.js');
require('../../system/esm/sizing.js');
require('../../system/esm/spacing.js');
require('../../system/esm/responsivePropType.js');
require('../../system/esm/typography.js');
require('../../system/esm/styleFunctionSx/styleFunctionSx.js');
require('../../system/esm/getThemeValue.js');
require('../../system/esm/Box/Box.js');
require('../../system/esm/useTheme.js');
var jsxRuntime = require('react/jsx-runtime');
require('../../system/esm/createStyled.js');
require('../../system/esm/styled.js');
require('../../private-theming/ThemeProvider/ThemeProvider.js');
require('../../private-theming/useTheme/ThemeContext.js');
var colorManipulator = require('../../system/esm/colorManipulator.js');
require('../../system/esm/ThemeProvider/ThemeProvider.js');
require('../../system/esm/Container/createContainer.js');
require('../../system/esm/Container/Container.js');
require('../../system/esm/Container/containerClasses.js');
require('../../system/esm/Unstable_Grid/Grid.js');
require('../../system/esm/Unstable_Grid/createGrid.js');
require('../../system/esm/Unstable_Grid/gridClasses.js');
require('../../system/esm/Stack/Stack.js');
require('../../system/esm/Stack/createStack.js');
require('../../system/esm/Stack/stackClasses.js');
var styled = require('../styles/styled.js');
var MoreHoriz = require('../internal/svg-icons/MoreHoriz.js');
var ButtonBase = require('../ButtonBase/ButtonBase.js');
require('../ButtonBase/buttonBaseClasses.js');
require('../ButtonBase/touchRippleClasses.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

const BreadcrumbCollapsedButton = styled["default"](ButtonBase["default"])(({
  theme
}) => _extends["default"]({
  display: 'flex',
  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,
  marginRight: `calc(${theme.spacing(1)} * 0.5)`
}, theme.palette.mode === 'light' ? {
  backgroundColor: theme.palette.grey[100],
  color: theme.palette.grey[700]
} : {
  backgroundColor: theme.palette.grey[700],
  color: theme.palette.grey[100]
}, {
  borderRadius: 2,
  '&:hover, &:focus': _extends["default"]({}, theme.palette.mode === 'light' ? {
    backgroundColor: theme.palette.grey[200]
  } : {
    backgroundColor: theme.palette.grey[600]
  }),
  '&:active': _extends["default"]({
    boxShadow: theme.shadows[0]
  }, theme.palette.mode === 'light' ? {
    backgroundColor: colorManipulator.emphasize(theme.palette.grey[200], 0.12)
  } : {
    backgroundColor: colorManipulator.emphasize(theme.palette.grey[600], 0.12)
  })
}));
const BreadcrumbCollapsedIcon = styled["default"](MoreHoriz["default"])({
  width: 24,
  height: 16
});

/**
 * @ignore - internal component.
 */
function BreadcrumbCollapsed(props) {
  const ownerState = props;
  return /*#__PURE__*/jsxRuntime.jsx("li", {
    children: /*#__PURE__*/jsxRuntime.jsx(BreadcrumbCollapsedButton, _extends["default"]({
      focusRipple: true
    }, props, {
      ownerState: ownerState,
      children: /*#__PURE__*/jsxRuntime.jsx(BreadcrumbCollapsedIcon, {
        ownerState: ownerState
      })
    }))
  });
}
process.env.NODE_ENV !== "production" ? BreadcrumbCollapsed.propTypes = {
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: PropTypes__default["default"].object
} : void 0;

exports["default"] = BreadcrumbCollapsed;
//# sourceMappingURL=BreadcrumbCollapsed.js.map
