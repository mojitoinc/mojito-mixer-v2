'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var emStyled = require('@emotion/styled');
var react = require('@emotion/react');
require('./StyledEngineProvider/StyledEngineProvider.js');
var GlobalStyles = require('./GlobalStyles/GlobalStyles.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var emStyled__default = /*#__PURE__*/_interopDefaultLegacy(emStyled);

/** @license MUI v5.11.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled(tag, options) {
  const stylesFactory = emStyled__default["default"](tag, options);
  if (process.env.NODE_ENV !== 'production') {
    return (...styles) => {
      const component = typeof tag === 'string' ? `"${tag}"` : 'component';
      if (styles.length === 0) {
        console.error([`MUI: Seems like you called \`styled(${component})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join('\n'));
      } else if (styles.some(style => style === undefined)) {
        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);
      }
      return stylesFactory(...styles);
    };
  }
  return stylesFactory;
}

// eslint-disable-next-line @typescript-eslint/naming-convention
const internal_processStyles = (tag, processor) => {
  // Emotion attaches all the styles as `__emotion_styles`.
  // Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186
  if (Array.isArray(tag.__emotion_styles)) {
    tag.__emotion_styles = processor(tag.__emotion_styles);
  }
};

Object.defineProperty(exports, 'ThemeContext', {
  enumerable: true,
  get: function () { return react.ThemeContext; }
});
Object.defineProperty(exports, 'css', {
  enumerable: true,
  get: function () { return react.css; }
});
Object.defineProperty(exports, 'keyframes', {
  enumerable: true,
  get: function () { return react.keyframes; }
});
exports.GlobalStyles = GlobalStyles["default"];
exports["default"] = styled;
exports.internal_processStyles = internal_processStyles;
//# sourceMappingURL=index.js.map
