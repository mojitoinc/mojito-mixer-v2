'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('react');
var PropTypes = require('prop-types');
var ThemeProvider$1 = require('../../../private-theming/ThemeProvider/ThemeProvider.js');
require('../../../private-theming/useTheme/ThemeContext.js');
require('../../../utils/esm/elementAcceptingRef.js');
require('../../../utils/esm/elementTypeAcceptingRef.js');
var exactProp = require('../../../utils/esm/exactProp.js');
require('react-is');
require('../../../utils/esm/ponyfillGlobal.js');
require('../../../utils/esm/refType.js');
require('../../../utils/esm/integerPropType.js');
require('@emotion/styled');
var react = require('@emotion/react');
require('../../../styled-engine/StyledEngineProvider/StyledEngineProvider.js');
require('../../../styled-engine/GlobalStyles/GlobalStyles.js');
var useTheme = require('../useTheme.js');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

const EMPTY_THEME = {};
function InnerThemeProvider(props) {
  const theme = useTheme["default"]();
  return /*#__PURE__*/jsxRuntime.jsx(react.ThemeContext.Provider, {
    value: typeof theme === 'object' ? theme : EMPTY_THEME,
    children: props.children
  });
}
process.env.NODE_ENV !== "production" ? InnerThemeProvider.propTypes = {
  /**
   * Your component tree.
   */
  children: PropTypes__default["default"].node
} : void 0;

/**
 * This component makes the `theme` available down the React tree.
 * It should preferably be used at **the root of your component tree**.
 */
function ThemeProvider(props) {
  const {
    children,
    theme: localTheme
  } = props;
  return /*#__PURE__*/jsxRuntime.jsx(ThemeProvider$1["default"], {
    theme: localTheme,
    children: /*#__PURE__*/jsxRuntime.jsx(InnerThemeProvider, {
      children: children
    })
  });
}
process.env.NODE_ENV !== "production" ? ThemeProvider.propTypes /* remove-proptypes */ = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Your component tree.
   */
  children: PropTypes__default["default"].node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: PropTypes__default["default"].oneOfType([PropTypes__default["default"].func, PropTypes__default["default"].object]).isRequired
} : void 0;
if (process.env.NODE_ENV !== 'production') {
  process.env.NODE_ENV !== "production" ? ThemeProvider.propTypes = exactProp["default"](ThemeProvider.propTypes) : void 0;
}

exports["default"] = ThemeProvider;
//# sourceMappingURL=ThemeProvider.js.map
