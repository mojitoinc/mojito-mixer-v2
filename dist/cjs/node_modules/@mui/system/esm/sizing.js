'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var style = require('./style.js');
var compose = require('./compose.js');
var breakpoints = require('./breakpoints.js');

function sizingTransform(value) {
  return value <= 1 && value !== 0 ? `${value * 100}%` : value;
}
const width = style["default"]({
  prop: 'width',
  transform: sizingTransform
});
const maxWidth = props => {
  if (props.maxWidth !== undefined && props.maxWidth !== null) {
    const styleFromPropValue = propValue => {
      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;
      const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || breakpoints.values[propValue];
      return {
        maxWidth: breakpoint || sizingTransform(propValue)
      };
    };
    return breakpoints.handleBreakpoints(props, props.maxWidth, styleFromPropValue);
  }
  return null;
};
maxWidth.filterProps = ['maxWidth'];
const minWidth = style["default"]({
  prop: 'minWidth',
  transform: sizingTransform
});
const height = style["default"]({
  prop: 'height',
  transform: sizingTransform
});
const maxHeight = style["default"]({
  prop: 'maxHeight',
  transform: sizingTransform
});
const minHeight = style["default"]({
  prop: 'minHeight',
  transform: sizingTransform
});
style["default"]({
  prop: 'size',
  cssProperty: 'width',
  transform: sizingTransform
});
style["default"]({
  prop: 'size',
  cssProperty: 'height',
  transform: sizingTransform
});
const boxSizing = style["default"]({
  prop: 'boxSizing'
});
const sizing = compose["default"](width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);

exports.boxSizing = boxSizing;
exports["default"] = sizing;
exports.height = height;
exports.maxHeight = maxHeight;
exports.maxWidth = maxWidth;
exports.minHeight = minHeight;
exports.minWidth = minWidth;
exports.sizingTransform = sizingTransform;
exports.width = width;
//# sourceMappingURL=sizing.js.map
