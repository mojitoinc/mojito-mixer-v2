'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var responsivePropType = require('./responsivePropType.js');
var style = require('./style.js');
var compose = require('./compose.js');
var spacing = require('./spacing.js');
var breakpoints = require('./breakpoints.js');

function borderTransform(value) {
  if (typeof value !== 'number') {
    return value;
  }
  return `${value}px solid`;
}
const border = style["default"]({
  prop: 'border',
  themeKey: 'borders',
  transform: borderTransform
});
const borderTop = style["default"]({
  prop: 'borderTop',
  themeKey: 'borders',
  transform: borderTransform
});
const borderRight = style["default"]({
  prop: 'borderRight',
  themeKey: 'borders',
  transform: borderTransform
});
const borderBottom = style["default"]({
  prop: 'borderBottom',
  themeKey: 'borders',
  transform: borderTransform
});
const borderLeft = style["default"]({
  prop: 'borderLeft',
  themeKey: 'borders',
  transform: borderTransform
});
const borderColor = style["default"]({
  prop: 'borderColor',
  themeKey: 'palette'
});
const borderTopColor = style["default"]({
  prop: 'borderTopColor',
  themeKey: 'palette'
});
const borderRightColor = style["default"]({
  prop: 'borderRightColor',
  themeKey: 'palette'
});
const borderBottomColor = style["default"]({
  prop: 'borderBottomColor',
  themeKey: 'palette'
});
const borderLeftColor = style["default"]({
  prop: 'borderLeftColor',
  themeKey: 'palette'
});

// false positive
// eslint-disable-next-line react/function-component-definition
const borderRadius = props => {
  if (props.borderRadius !== undefined && props.borderRadius !== null) {
    const transformer = spacing.createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');
    const styleFromPropValue = propValue => ({
      borderRadius: spacing.getValue(transformer, propValue)
    });
    return breakpoints.handleBreakpoints(props, props.borderRadius, styleFromPropValue);
  }
  return null;
};
borderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {
  borderRadius: responsivePropType["default"]
} : {};
borderRadius.filterProps = ['borderRadius'];
const borders = compose["default"](border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);

exports.border = border;
exports.borderBottom = borderBottom;
exports.borderBottomColor = borderBottomColor;
exports.borderColor = borderColor;
exports.borderLeft = borderLeft;
exports.borderLeftColor = borderLeftColor;
exports.borderRadius = borderRadius;
exports.borderRight = borderRight;
exports.borderRightColor = borderRightColor;
exports.borderTop = borderTop;
exports.borderTopColor = borderTopColor;
exports.borderTransform = borderTransform;
exports["default"] = borders;
//# sourceMappingURL=borders.js.map
