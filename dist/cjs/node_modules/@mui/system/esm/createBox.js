'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('../../../@babel/runtime/helpers/esm/extends.js');
var objectWithoutPropertiesLoose = require('../../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js');
var React = require('react');
var clsx_m = require('../../../clsx/dist/clsx.m.js');
var index = require('../../styled-engine/index.js');
var styleFunctionSx = require('./styleFunctionSx/styleFunctionSx.js');
var extendSxProp = require('./styleFunctionSx/extendSxProp.js');
require('./spacing.js');
require('./borders.js');
require('./cssGrid.js');
require('./palette.js');
require('./sizing.js');
var useTheme = require('./useTheme.js');
var jsxRuntime = require('react/jsx-runtime');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

const _excluded = ["className", "component"];
function createBox(options = {}) {
  const {
    defaultTheme,
    defaultClassName = 'MuiBox-root',
    generateClassName
  } = options;
  const BoxRoot = index["default"]('div', {
    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'
  })(styleFunctionSx["default"]);
  const Box = /*#__PURE__*/React__namespace.forwardRef(function Box(inProps, ref) {
    const theme = useTheme["default"](defaultTheme);
    const _extendSxProp = extendSxProp["default"](inProps),
      {
        className,
        component = 'div'
      } = _extendSxProp,
      other = objectWithoutPropertiesLoose["default"](_extendSxProp, _excluded);
    return /*#__PURE__*/jsxRuntime.jsx(BoxRoot, _extends["default"]({
      as: component,
      ref: ref,
      className: clsx_m.clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
      theme: theme
    }, other));
  });
  return Box;
}

exports["default"] = createBox;
//# sourceMappingURL=createBox.js.map
