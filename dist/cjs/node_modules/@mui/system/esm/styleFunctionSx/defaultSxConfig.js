'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var spacing = require('../spacing.js');
var borders = require('../borders.js');
var cssGrid = require('../cssGrid.js');
var palette = require('../palette.js');
var sizing = require('../sizing.js');

const defaultSxConfig = {
  // borders
  border: {
    themeKey: 'borders',
    transform: borders.borderTransform
  },
  borderTop: {
    themeKey: 'borders',
    transform: borders.borderTransform
  },
  borderRight: {
    themeKey: 'borders',
    transform: borders.borderTransform
  },
  borderBottom: {
    themeKey: 'borders',
    transform: borders.borderTransform
  },
  borderLeft: {
    themeKey: 'borders',
    transform: borders.borderTransform
  },
  borderColor: {
    themeKey: 'palette'
  },
  borderTopColor: {
    themeKey: 'palette'
  },
  borderRightColor: {
    themeKey: 'palette'
  },
  borderBottomColor: {
    themeKey: 'palette'
  },
  borderLeftColor: {
    themeKey: 'palette'
  },
  borderRadius: {
    themeKey: 'shape.borderRadius',
    style: borders.borderRadius
  },
  // palette
  color: {
    themeKey: 'palette',
    transform: palette.paletteTransform
  },
  bgcolor: {
    themeKey: 'palette',
    cssProperty: 'backgroundColor',
    transform: palette.paletteTransform
  },
  backgroundColor: {
    themeKey: 'palette',
    transform: palette.paletteTransform
  },
  // spacing
  p: {
    style: spacing.padding
  },
  pt: {
    style: spacing.padding
  },
  pr: {
    style: spacing.padding
  },
  pb: {
    style: spacing.padding
  },
  pl: {
    style: spacing.padding
  },
  px: {
    style: spacing.padding
  },
  py: {
    style: spacing.padding
  },
  padding: {
    style: spacing.padding
  },
  paddingTop: {
    style: spacing.padding
  },
  paddingRight: {
    style: spacing.padding
  },
  paddingBottom: {
    style: spacing.padding
  },
  paddingLeft: {
    style: spacing.padding
  },
  paddingX: {
    style: spacing.padding
  },
  paddingY: {
    style: spacing.padding
  },
  paddingInline: {
    style: spacing.padding
  },
  paddingInlineStart: {
    style: spacing.padding
  },
  paddingInlineEnd: {
    style: spacing.padding
  },
  paddingBlock: {
    style: spacing.padding
  },
  paddingBlockStart: {
    style: spacing.padding
  },
  paddingBlockEnd: {
    style: spacing.padding
  },
  m: {
    style: spacing.margin
  },
  mt: {
    style: spacing.margin
  },
  mr: {
    style: spacing.margin
  },
  mb: {
    style: spacing.margin
  },
  ml: {
    style: spacing.margin
  },
  mx: {
    style: spacing.margin
  },
  my: {
    style: spacing.margin
  },
  margin: {
    style: spacing.margin
  },
  marginTop: {
    style: spacing.margin
  },
  marginRight: {
    style: spacing.margin
  },
  marginBottom: {
    style: spacing.margin
  },
  marginLeft: {
    style: spacing.margin
  },
  marginX: {
    style: spacing.margin
  },
  marginY: {
    style: spacing.margin
  },
  marginInline: {
    style: spacing.margin
  },
  marginInlineStart: {
    style: spacing.margin
  },
  marginInlineEnd: {
    style: spacing.margin
  },
  marginBlock: {
    style: spacing.margin
  },
  marginBlockStart: {
    style: spacing.margin
  },
  marginBlockEnd: {
    style: spacing.margin
  },
  // display
  displayPrint: {
    cssProperty: false,
    transform: value => ({
      '@media print': {
        display: value
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: cssGrid.gap
  },
  rowGap: {
    style: cssGrid.rowGap
  },
  columnGap: {
    style: cssGrid.columnGap
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: 'zIndex'
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: 'shadows'
  },
  // sizing
  width: {
    transform: sizing.sizingTransform
  },
  maxWidth: {
    style: sizing.maxWidth
  },
  minWidth: {
    transform: sizing.sizingTransform
  },
  height: {
    transform: sizing.sizingTransform
  },
  maxHeight: {
    transform: sizing.sizingTransform
  },
  minHeight: {
    transform: sizing.sizingTransform
  },
  boxSizing: {},
  // typography
  fontFamily: {
    themeKey: 'typography'
  },
  fontSize: {
    themeKey: 'typography'
  },
  fontStyle: {
    themeKey: 'typography'
  },
  fontWeight: {
    themeKey: 'typography'
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: false,
    themeKey: 'typography'
  }
};

exports["default"] = defaultSxConfig;
//# sourceMappingURL=defaultSxConfig.js.map
