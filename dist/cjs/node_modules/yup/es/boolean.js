'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var schema = require('./schema.js');
var locale = require('./locale.js');
var isAbsent = require('./util/isAbsent.js');

function create() {
  return new BooleanSchema();
}
class BooleanSchema extends schema["default"] {
  constructor() {
    super({
      type: 'boolean'
    });
    this.withMutation(() => {
      this.transform(function (value) {
        if (!this.isType(value)) {
          if (/^(true|1)$/i.test(String(value))) return true;
          if (/^(false|0)$/i.test(String(value))) return false;
        }

        return value;
      });
    });
  }

  _typeCheck(v) {
    if (v instanceof Boolean) v = v.valueOf();
    return typeof v === 'boolean';
  }

  isTrue(message = locale.boolean.isValue) {
    return this.test({
      message,
      name: 'is-value',
      exclusive: true,
      params: {
        value: 'true'
      },

      test(value) {
        return isAbsent["default"](value) || value === true;
      }

    });
  }

  isFalse(message = locale.boolean.isValue) {
    return this.test({
      message,
      name: 'is-value',
      exclusive: true,
      params: {
        value: 'false'
      },

      test(value) {
        return isAbsent["default"](value) || value === false;
      }

    });
  }

}
create.prototype = BooleanSchema.prototype;

exports.create = create;
exports["default"] = BooleanSchema;
//# sourceMappingURL=boolean.js.map
