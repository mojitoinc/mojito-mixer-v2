'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var responseIterator$1 = require('../../utilities/common/responseIterator.js');
var async = require('./iterators/async.js');
var nodeStream = require('./iterators/nodeStream.js');
var promise = require('./iterators/promise.js');
var reader = require('./iterators/reader.js');

function responseIterator(response) {
    var body = response;
    if (responseIterator$1.isNodeResponse(response))
        body = response.body;
    if (responseIterator$1.isAsyncIterableIterator(body))
        return async["default"](body);
    if (responseIterator$1.isReadableStream(body))
        return reader["default"](body.getReader());
    if (responseIterator$1.isStreamableBlob(body)) {
        return reader["default"](body.stream().getReader());
    }
    if (responseIterator$1.isBlob(body))
        return promise["default"](body.arrayBuffer());
    if (responseIterator$1.isNodeReadableStream(body))
        return nodeStream["default"](body);
    throw new Error("Unknown body type for responseIterator. Please pass a streamable response.");
}

exports.responseIterator = responseIterator;
//# sourceMappingURL=responseIterator.js.map
