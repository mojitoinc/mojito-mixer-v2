'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../../utilities/globals/index.js');
var React = require('react');
var ApolloContext = require('./ApolloContext.js');
var invariant = require('../../../../ts-invariant/lib/invariant.js');

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n["default"] = e;
    return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

var ApolloProvider = function (_a) {
    var client = _a.client, children = _a.children;
    var ApolloContext$1 = ApolloContext.getApolloContext();
    return (React__namespace.createElement(ApolloContext$1.Consumer, null, function (context) {
        if (context === void 0) { context = {}; }
        if (client && context.client !== client) {
            context = Object.assign({}, context, { client: client });
        }
        __DEV__ ? invariant.invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' +
            'sure you pass in your client via the "client" prop.') : invariant.invariant(context.client, 28);
        return (React__namespace.createElement(ApolloContext$1.Provider, { value: context }, children));
    }));
};

exports.ApolloProvider = ApolloProvider;
//# sourceMappingURL=ApolloProvider.js.map
