{"version":3,"file":"toPath.js","sources":["../../../../node_modules/lodash-es/toPath.js"],"sourcesContent":["import arrayMap from './_arrayMap.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\nimport stringToPath from './_stringToPath.js';\nimport toKey from './_toKey.js';\nimport toString from './toString.js';\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nexport default toPath;\n"],"names":["isArray","arrayMap","toKey","isSymbol","copyArray","stringToPath","toString"],"mappings":";;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,KAAK,EAAE;AACvB,EAAE,IAAIA,kBAAO,CAAC,KAAK,CAAC,EAAE;AACtB,IAAI,OAAOC,oBAAQ,CAAC,KAAK,EAAEC,iBAAK,CAAC,CAAC;AAClC,GAAG;AACH,EAAE,OAAOC,mBAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAGC,qBAAS,CAACC,wBAAY,CAACC,mBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9E;;;;"}