'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var isObject = require('./isObject.js');
var _isPrototype = require('./_isPrototype.js');
var _nativeKeysIn = require('./_nativeKeysIn.js');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject["default"](object)) {
    return _nativeKeysIn["default"](object);
  }
  var isProto = _isPrototype["default"](object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

exports["default"] = baseKeysIn;
//# sourceMappingURL=_baseKeysIn.js.map
