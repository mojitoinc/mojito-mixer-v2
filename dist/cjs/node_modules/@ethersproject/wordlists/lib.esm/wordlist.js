'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var id = require('../../hash/lib.esm/id.js');
require('../../hash/lib.esm/namehash.js');
require('../../bytes/lib.esm/index.js');
require('js-sha3');
require('../../bignumber/lib.esm/bignumber.js');
require('../../bignumber/lib.esm/fixednumber.js');
require('../../strings/lib.esm/utf8.js');
require('../../strings/lib.esm/idna.js');
require('../../hash/lib.esm/typed-data.js');
var index$1 = require('../../properties/lib.esm/index.js');
var index = require('../../logger/lib.esm/index.js');
var _version = require('./_version.js');

const logger = new index.Logger(_version.version);
class Wordlist {
    constructor(locale) {
        logger.checkAbstract(new.target, Wordlist);
        index$1.defineReadOnly(this, "locale", locale);
    }
    // Subclasses may override this
    split(mnemonic) {
        return mnemonic.toLowerCase().split(/ +/g);
    }
    // Subclasses may override this
    join(words) {
        return words.join(" ");
    }
    static check(wordlist) {
        const words = [];
        for (let i = 0; i < 2048; i++) {
            const word = wordlist.getWord(i);
            /* istanbul ignore if */
            if (i !== wordlist.getWordIndex(word)) {
                return "0x";
            }
            words.push(word);
        }
        return id.id(words.join("\n") + "\n");
    }
    static register(lang, name) {
        if (!name) {
            name = lang.locale;
        }
    }
}

exports.Wordlist = Wordlist;
exports.logger = logger;
//# sourceMappingURL=wordlist.js.map
